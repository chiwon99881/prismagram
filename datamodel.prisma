type User {
  id: ID! @id
  username: String! @unique
  avatar: String
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfUser", onDelete: CASCADE)
  room: [Room!]! @relation(name: "RoomOfUser", onDelete: CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt 
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User! @relation(name: "PostOfUser")
  files: [File!]! @relation(name: "FileToPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeToPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentToPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User! @relation(name: "LikeOfUser")
  post: Post! @relation(name: "LikeToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name: "CommentOfUser")
  post: Post! @relation(name: "CommentToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FileToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]! @relation(name: "RoomOfUser")
  messages: [Message!]! @relation(name: "MessageToRoom", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room! @relation(name: "MessageToRoom")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}